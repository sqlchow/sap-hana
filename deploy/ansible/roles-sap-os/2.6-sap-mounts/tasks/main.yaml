---

# /*---------------------------------------------------------------------------8
# |                                                                            |
# |                Perform the Disk system mounts                              |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

# Mount Filesystems
- name:                                Mount Filesystems
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  vars:
    # Get all the hostnames in <SID>_SCS group and return only the first hostname
    nfs_server:                        "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"
  loop:
    - { node_tier: 'all',  type: 'xfs',   src: '/dev/vg_sap/lv_usrsap',                 path: '/usr/sap'         }
    - { node_tier: 'scs',  type: 'xfs',   src: '/dev/vg_sap/lv_usrsapinstall',          path: '/usr/sap/install' }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_sap/lv_hana_shared',            path: '/hana/shared'     }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_data/lv_hana_data',        path: '/hana/data'       }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_log/lv_hana_log',          path: '/hana/log'        }
    - { node_tier: 'hana', type: 'xfs',   src: '/dev/vg_hana_backup/lv_hana_backup',    path: '/hana/backup'     }
  when:         (item.node_tier == "all" or item.node_tier == node_tier)

- name:                                Set the NFS Server name
  ansible.builtin.set_fact:
    nfs_server:                        "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"

# Mount Filesystems
- name:                                Mount Filesystems when not using ANF (app & pas)
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}',  path: '/sapmnt/{{ sap_sid|upper }}' }
    - { type: 'nfs4',  src: '{{ nfs_server }}:/usr/sap/install',             path: '/usr/sap/install'            }                # Special Install Structure; Destroy on Completion
  when:
    - tier == 'sapos'
    - node_tier == 'pas' or node_tier =='app'
    - sap_mnt | default ('none') | trim | length == 4

# Mount Filesystems
- name:                                Mount Filesystems when not using ANF (app & pas)
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             remounted
  loop:
    - { type: 'nfs4',  src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}',  path: '/sapmnt/{{ sap_sid|upper }}' }
  when:
    - tier == 'dbload' or tier == 'app'
    - node_tier == 'pas' or node_tier =='app'
    - sap_mnt | default ('none') | trim | length == 4


# Mount Filesystems
- name:                                Mount Filesystems when not using ANF (hana)
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { type: 'nfs4',  src: '{{ nfs_server }}:/usr/sap/install',             path: '/usr/sap/install'  }
  when:
    - tier == 'sapos'
    - sap_mnt | default ('none') | trim | length == 4
    - node_tier == 'hana'

# Mount Filesystems
- name:                                Mount Filesystems when not using ANF (scs)
  ansible.builtin.mount:
    src:                               "{{ item.src }}"
    path:                              "{{ item.path }}"
    fstype:                            "{{ item.type }}"
    opts:                              defaults
    state:                             mounted
  loop:
    - { type: 'xfs',  src: '/dev/vg_sap/lv_sapmnt',  path: '/sapmnt/{{ sap_sid|upper }}' }
  when:
    - tier == 'sapos'
    - sap_mnt | default ('none') | trim | length == 4
    - node_tier == 'scs'

# Import this task only if the sap_mnt is defined, i.e. ANF is used
- name:                                Show sap_mnt
  ansible.builtin.debug:
    msg:
      - "{{ sap_mnt is defined }}"
    verbosity:                         2

- name:                                Import ANF tasks
  ansible.builtin.import_tasks:        2.6.1-anf-mounts.yaml
  when:
<<<<<<< HEAD
    - sap_mnt is defined
=======
    - sap_mnt is defined or sap_trans is defined
>>>>>>> 041bd87476ad1606f29fa71755b92a1047dc2c6c
    - sap_mnt | default ('none') | trim | length > 4
    - tier == 'sapos'

...
